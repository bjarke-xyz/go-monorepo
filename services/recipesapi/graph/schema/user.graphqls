

extend type Query {
  me: User! @hasRole(role: USER)
}

extend type Mutation {
  signIn(email: String!, password: String!): Token!
  signUp(input: UserInput!): Token! 
  updateUser(input: UserInput!): User!
}

directive @hasRole(role: Role!) on FIELD_DEFINITION
enum Role {
  ADMIN
  USER
  ANON
}

type User {
  id: ID!
  displayName: String!
  email: String!
  recipes: [Recipe!]!
}

type Token {
  token: String!
}

input UserInput {
  email: String!
  password: String
  displayName: String!
}